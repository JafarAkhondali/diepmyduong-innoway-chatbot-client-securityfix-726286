{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///innoway_chatbot.min.js","webpack:///webpack/bootstrap a1dd11d68ff86f532d20","webpack:///./src/utils/helper.ts","webpack:///./src/configs/default.config.ts","webpack:///./src/configs/fb.config.ts","webpack:///./src/page.ts","webpack:///./src/index.ts","webpack:///./src/story.ts","webpack:///./src/user.ts"],"names":["root","factory","exports","module","define","amd","innoway_chatbot","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","default_config_1","URL","apiUrl","path","query","params","url","DefaultConfig","host","Object","keys","map","key","replace","RegExp","slice","facebook","app_id","FBConfig","callback","d","document","s","window","fbAsyncInit","console","log","FB","init","appId","xfbml","version","cookie","status","AppEvents","logPageView","js","fjs","getElementsByTagName","getElementById","createElement","async","src","parentNode","insertBefore","helper_1","story_1","Page","token","_token","prototype","getSettings","self","settings","crossDomain","method","headers","access_token","$","ajax","done","response","fail","request","err","activeSetting","data","content-type","processData","JSON","stringify","trigger","EventTypes","SETTING_CHANGE","deActiveSetting","types","getStories","buildStory","story","Story","getStory","story_id","newStory","title","STORY_CHANGE","removeStory","getStartedStory","SettingTypes","GREETING","PRESISTENT_MENU","GET_STARTED","user_1","page_1","fb_config_1","User","page","_page","_story","getCards","_id","addCard","card","CARDS_CHANGE","removeCard","card_id","updateCard","getKeys","addKey","KEYS_CHANGE","removeKey","key_id","updateKey","destroy","update","setAsGetStarted","authenticated","getLoginStatus","res","authResponse","accessToken","AUTHENTICATE_STATECHANGE","isAuthenticated","loginWithFacebook","login","logout","user","getPages","subscribePage","page_token","PAGE_STATECHANGE","unSubscribePage","getInfo","fields","size","api","type","getPageInfo","getPageInfoWithId","pid","cards"],"mappings":"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","file":"innoway_chatbot.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"innoway_chatbot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"innoway_chatbot\"] = factory();\n\telse\n\t\troot[\"innoway_chatbot\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"innoway_chatbot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"innoway_chatbot\"] = factory();\n\telse\n\t\troot[\"innoway_chatbot\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(5);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar default_config_1 = __webpack_require__(2);\n\tvar URL = (function () {\n\t    function URL() {\n\t    }\n\t    //Author: Dương Jerry\n\t    //Description: get API full url\n\t    URL.apiUrl = function (path, query, params) {\n\t        if (query === void 0) { query = null; }\n\t        if (params === void 0) { params = null; }\n\t        var url = default_config_1.DefaultConfig.host;\n\t        if (params) {\n\t            Object.keys(params).map(function (key) {\n\t                path = path.replace(new RegExp(\"\\{\\{\" + key + \"\\}\\}\", 'g'), params[key]);\n\t            });\n\t        }\n\t        if (query) {\n\t            path += \"?\";\n\t            Object.keys(query).map(function (key) {\n\t                path += key + \"=\" + query[key] + \"&\";\n\t            });\n\t            path = path.slice(0, -1);\n\t        }\n\t        return url + path;\n\t    };\n\t    return URL;\n\t}());\n\texports.URL = URL;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\texports.DefaultConfig = {\n\t    host: \"https://jerry-chatbot.herokuapp.com/\",\n\t    facebook: {\n\t        app_id: \"143366482876596\" //Innoway\n\t    }\n\t};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar default_config_1 = __webpack_require__(2);\n\t//Facebook Config\n\texports.FBConfig = function (callback) {\n\t    if (callback === void 0) { callback = function () { }; }\n\t    var d = document;\n\t    var s = 'script';\n\t    var id = 'facebook-jssdk';\n\t    window.fbAsyncInit = function () {\n\t        console.log(\"INIT FACEBOOK SDK\");\n\t        FB.init({\n\t            appId: default_config_1.DefaultConfig.facebook.app_id,\n\t            xfbml: true,\n\t            version: 'v2.9',\n\t            cookie: true,\n\t            status: true\n\t        });\n\t        FB.AppEvents.logPageView();\n\t        callback();\n\t    };\n\t    var js, fjs = d.getElementsByTagName(s)[0];\n\t    if (d.getElementById(id)) {\n\t        return;\n\t    }\n\t    js = d.createElement(s);\n\t    js.id = id;\n\t    js.async = true;\n\t    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n\t    fjs.parentNode.insertBefore(js, fjs);\n\t    console.log(\"ADD FACEBOOK SDK\", fjs.parentNode);\n\t};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar helper_1 = __webpack_require__(1);\n\tvar story_1 = __webpack_require__(6);\n\tvar Page = (function () {\n\t    function Page(token) {\n\t        this._token = token;\n\t    }\n\t    //Author: Dương Jerry\n\t    //Description: Get page settings\n\t    Page.prototype.getSettings = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/settings\"),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Active page settings\n\t    Page.prototype.activeSetting = function (data, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/settings/active\"),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify(data)\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Page.EventTypes.SETTING_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Deative page settings\n\t    Page.prototype.deActiveSetting = function (types, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/settings/deactive\"),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify({\n\t                types: types\n\t            })\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Page.EventTypes.SETTING_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Get all Stories\n\t    Page.prototype.getStories = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories\"),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": this._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Return Story Object\n\t    Page.prototype.buildStory = function (story) {\n\t        return new story_1.Story(this, story);\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Return Story Object\n\t    Page.prototype.getStory = function (story_id, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}\", null, { story_id: story_id }),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            if (response != null) {\n\t                callback(null, self.buildStory(response));\n\t            }\n\t            else {\n\t                callback(\"Not found\", null);\n\t            }\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: New Story\n\t    Page.prototype.newStory = function (title, callback) {\n\t        if (title === void 0) { title = \"My Story\"; }\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories\"),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify({ title: title })\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Page.EventTypes.STORY_CHANGE, response);\n\t            callback(null, self.buildStory(response));\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Remove Story\n\t    Page.prototype.removeStory = function (story_id, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}\", null, { story_id: story_id }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Page.EventTypes.SETTING_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Remove Story\n\t    Page.prototype.getStartedStory = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/settings/getStartedStory\"),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            if (response != null) {\n\t                response = self.buildStory(response);\n\t            }\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    Page.SettingTypes = {\n\t        GREETING: \"greeting\",\n\t        PRESISTENT_MENU: \"persistent_menu\",\n\t        GET_STARTED: \"get_started\",\n\t    };\n\t    Page.EventTypes = {\n\t        SETTING_CHANGE: \"innoway_chatbot.page.setting_change\",\n\t        STORY_CHANGE: \"innoway_chatbot.page.story_change\",\n\t    };\n\t    return Page;\n\t}());\n\texports.Page = Page;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar user_1 = __webpack_require__(7);\n\tvar page_1 = __webpack_require__(4);\n\t//LOAD DACEBOOK CONFIG\n\tvar fb_config_1 = __webpack_require__(3);\n\tfb_config_1.FBConfig();\n\tmodule.exports = {\n\t    User: user_1.User,\n\t    Page: page_1.Page\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar helper_1 = __webpack_require__(1);\n\tvar page_1 = __webpack_require__(4);\n\tvar Story = (function () {\n\t    function Story(page, story) {\n\t        this._page = page;\n\t        this._token = page._token;\n\t        this._story = story;\n\t    }\n\t    //Author: Dương Jerry\n\t    //Description: Get story cards\n\t    Story.prototype.getCards = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/cards\", null, { story_id: self._story._id }),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Add Card\n\t    Story.prototype.addCard = function (card, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/cards\", null, {\n\t                story_id: self._story._id\n\t            }),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify(card)\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.CARDS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Remove Card\n\t    Story.prototype.removeCard = function (card_id, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/cards/{{card_id}}\", null, {\n\t                story_id: self._story._id, card_id: card_id\n\t            }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.CARDS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Update Card\n\t    Story.prototype.updateCard = function (card, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/cards/{{card_id}}\", null, {\n\t                story_id: self._story._id, card_id: card._id\n\t            }),\n\t            \"method\": \"PUT\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"data\": JSON.stringify(card)\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.CARDS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Get Story Keys\n\t    Story.prototype.getKeys = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/keys\", null, { story_id: self._story._id }),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Add Key\n\t    Story.prototype.addKey = function (key, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/keys\", null, {\n\t                story_id: self._story._id\n\t            }),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify({ key: key })\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.KEYS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Remove Key\n\t    Story.prototype.removeKey = function (key_id, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/keys/{{key_id}}\", null, {\n\t                story_id: self._story._id, key_id: key_id\n\t            }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.KEYS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Update Key\n\t    Story.prototype.updateKey = function (key, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/keys/{{key_id}}\", null, {\n\t                story_id: self._story._id, key_id: key._id\n\t            }),\n\t            \"method\": \"PUT\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"data\": JSON.stringify(key)\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.KEYS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Remove Story\n\t    Story.prototype.destroy = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}\", null, { story_id: self._story._id }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self._page).trigger(page_1.Page.EventTypes.STORY_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Update Story\n\t    Story.prototype.update = function (title, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}\", null, { story_id: self._story._id }),\n\t            \"method\": \"PUT\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"data\": JSON.stringify({ title: title })\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self._page).trigger(page_1.Page.EventTypes.STORY_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Add Key\n\t    Story.prototype.setAsGetStarted = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/setStarted\", null, { story_id: self._story._id }),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    Story.EventTypes = {\n\t        CARDS_CHANGE: \"innoway_chatbot.story.card_change\",\n\t        KEYS_CHANGE: \"innoway_chatbot.story.key_change\",\n\t    };\n\t    return Story;\n\t}());\n\texports.Story = Story;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar helper_1 = __webpack_require__(1);\n\tvar fb_config_1 = __webpack_require__(3);\n\tvar User = (function () {\n\t    //Hàm khởi tạo với tham số token là Optional\n\t    function User(token) {\n\t        if (token === void 0) { token = null; }\n\t        this.authenticated = false;\n\t        var self = this;\n\t        console.log(\"Init User Object\");\n\t        fb_config_1.FBConfig(function () {\n\t            console.log(\"FACEBOOK LOADED\");\n\t            FB.getLoginStatus(function (res) {\n\t                console.log(\"LOGIN STATUS \", res);\n\t                if (res.status === \"connected\") {\n\t                    self._token = res.authResponse.accessToken;\n\t                    self.authenticated = true;\n\t                    $(self).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE, self.authenticated);\n\t                }\n\t                else {\n\t                    console.log(\"not connected\");\n\t                }\n\t            });\n\t        });\n\t    }\n\t    //Khai báo hàm private \n\t    //Tham số là 1 hàm callback Optional\n\t    User.prototype.isAuthenticated = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        if (!this.authenticated) {\n\t            callback('PERMISSION ERROR', \"You don't have permission to access\");\n\t        }\n\t        return this.authenticated;\n\t    };\n\t    //Khai báo hàm cho 1 đối tượng User\n\t    // public login(phone:string,password:string,callback:any = ()=>{}){\n\t    //     //Sử dụng ajax để access API\n\t    //     $.ajax({\n\t    //         type: 'POST',\n\t    //         url: API.pages.getAllPages,\n\t    //         dataType:'json',\n\t    //         data: { //Dữ liệu json gửi đi\n\t    //             Phone   : phone,\n\t    //             Password: password\n\t    //         }\n\t    //     })\n\t    //     .done((res:any) => {\n\t    //         //Kết quả trả về\n\t    //         if(res.StatusCode === 200){\n\t    //             this.user = res.Data;\n\t    //             this._token = res.Data.Token;\n\t    //             this.authenticated = true;\n\t    //             //Tạo event trigger\n\t    //             //Dùng để client biêt khi có event\n\t    //             //Ví dụ $(this).on(\"EVENT_KEY\",callback);\n\t    //             $(this).trigger(\"EVENT_KEY\",this.authenticated); \n\t    //             //Sử dụng localStorage cho 1 số biến cần cache lại\n\t    //             localStorage.setItem(\"STORE_KEY\",res.Data.Token);\n\t    //             //Gọi callback đẻ trả về kết quả cho client \n\t    //             callback(null,res.Data);\n\t    //         }else{\n\t    //             this.authenticated = false;\n\t    //             $(this).trigger(\"EVENT_KEY\",this.authenticated);\n\t    //             callback(res.StatusCode,res.StatusMessage);\n\t    //         }\n\t    //     })\n\t    //     .fail((request:any,err:any,status:any)=>{\n\t    //         //Kết quả trả về lỗi \n\t    //         this.authenticated = false;\n\t    //         $(this).trigger(\"EVENT_KEY\",this.authenticated);\n\t    //         callback(err,status);\n\t    //     });\n\t    // }\n\t    //LOGIN WITH FACEBOOK\n\t    User.prototype.loginWithFacebook = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        FB.login(function (response) {\n\t            if (response.authResponse) {\n\t                self._token = response.authResponse.accessToken;\n\t                self.authenticated = true;\n\t                callback(null, response.authResponse);\n\t            }\n\t            else {\n\t                self._token = null;\n\t                self.authenticated = false;\n\t                callback('User cancelled login or did not fully authorize.', null);\n\t            }\n\t            $(self).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE, self.authenticated);\n\t        });\n\t    };\n\t    //LOGOUT\n\t    User.prototype.logout = function () {\n\t        //Facebook logout \n\t        FB.logout();\n\t        //Xoá cache \n\t        // localStorage.removeItem(\"STORE_KEY\");\n\t        this._token = null;\n\t        this.user = null;\n\t        this.authenticated = false;\n\t        $(this).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE, this.authenticated);\n\t    };\n\t    //GET LIST FAN PAGE\n\t    User.prototype.getPages = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        if (!self.isAuthenticated(callback))\n\t            return;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/me/pages\"),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": this._token\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Subscribe page\n\t    User.prototype.subscribePage = function (page_token, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/me/pages/subscribe\", { page_token: page_token }),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": this._token,\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(User.EventTypes.PAGE_STATECHANGE, true);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Unsubscribe page\n\t    User.prototype.unSubscribePage = function (page_token, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/me/pages/subscribe\", { page_token: page_token }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": this._token,\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(User.EventTypes.PAGE_STATECHANGE, false);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    User.prototype.getInfo = function (callback, fields, size) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        if (fields === void 0) { fields = \"email,id,birthday,name\"; }\n\t        if (size === void 0) { size = \"large\"; }\n\t        var self = this;\n\t        if (!self.isAuthenticated(callback))\n\t            return;\n\t        FB.api('/me', 'GET', { \"fields\": fields, \"type\": size }, function (res) {\n\t            callback(null, res);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Get page info\n\t    User.prototype.getPageInfo = function (page_token, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/me/pages/info\", { page_token: page_token }),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Get page info with ID\n\t    User.prototype.getPageInfoWithId = function (pid, callback, fields) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        if (fields === void 0) { fields = \"access_token,picture,name,is_webhooks_subscribed\"; }\n\t        var self = this;\n\t        FB.api('/' + pid, 'GET', { \"fields\": fields }, function (response) {\n\t            callback(null, response);\n\t        });\n\t    };\n\t    //Khai báo biến static\n\t    User.cards = [];\n\t    User.EventTypes = {\n\t        AUTHENTICATE_STATECHANGE: \"innoway_chatbot.user.authenticate\",\n\t        PAGE_STATECHANGE: \"innoway_chatbot.user.page_state\"\n\t    };\n\t    return User;\n\t}());\n\texports.User = User;\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// innoway_chatbot.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a1dd11d68ff86f532d20","import { DefaultConfig } from '../configs/default.config';\n\nexport class URL {\n\n    //Author: Dương Jerry\n    //Description: get API full url\n    public static apiUrl(path:string,query:any = null,params:any = null){\n        var url = DefaultConfig.host;\n        if(params){\n            Object.keys(params).map(key =>{\n                path = path.replace(new RegExp(\"\\{\\{\"+ key +\"\\}\\}\", 'g'),params[key]);\n            })\n        }\n        if(query){\n            path += \"?\";\n            Object.keys(query).map(key =>{\n                path += key+\"=\"+query[key]+\"&\";\n            })\n            path = path.slice(0, -1);\n        }\n        return url+path;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/utils/helper.ts","export const DefaultConfig = {\n    host: \"https://jerry-chatbot.herokuapp.com/\",\n    facebook: {\n        app_id: \"143366482876596\" //Innoway\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/configs/default.config.ts","import { DefaultConfig } from './default.config';\ndeclare var $:any,window:any,FB:any;\n\n//Facebook Config\n\n\nexport const FBConfig= (callback:any = ()=>{}) => {\n    \n    var d = document;\n    var s = 'script';\n    var id = 'facebook-jssdk';\n    window.fbAsyncInit = function() {\n        console.log(\"INIT FACEBOOK SDK\");\n        FB.init({\n            appId      : DefaultConfig.facebook.app_id,\n            xfbml      : true,\n            version    : 'v2.9',\n            cookie     : true,\n            status     : true\n        });\n        FB.AppEvents.logPageView();\n        callback();\n    };\n    var js:any, fjs:any = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) {return;}\n    js = d.createElement(s); js.id = id; js.async = true;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n    console.log(\"ADD FACEBOOK SDK\",fjs.parentNode);\n};\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/configs/fb.config.ts","//Import Config\nimport { DefaultConfig } from './configs/default.config';\nimport { URL } from './utils/helper';\nimport { Story } from './story';\n\ndeclare var $:any,FB:any;\n\nexport class Page {\n\n    _token:string; //page token\n    \n    public static SettingTypes = {\n        GREETING: \"greeting\",\n        PRESISTENT_MENU: \"persistent_menu\",\n        GET_STARTED: \"get_started\",\n    }\n\n    public static EventTypes = {\n        SETTING_CHANGE: \"innoway_chatbot.page.setting_change\",\n        STORY_CHANGE: \"innoway_chatbot.page.story_change\",\n    }\n\n    constructor(token:string){\n        this._token = token;\n    }\n\n    //Author: Dương Jerry\n    //Description: Get page settings\n    public getSettings(callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/settings\"),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Active page settings\n    public activeSetting(data:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/settings/active\"),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify(data)\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Page.EventTypes.SETTING_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Deative page settings\n    public deActiveSetting(types:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/settings/deactive\"),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify({\n                types: types\n            })\n        }\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Page.EventTypes.SETTING_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        }); \n    }\n\n    //Author: Dương Jerry\n    //Description: Get all Stories\n    public getStories(callback:any = ()=>{}){\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories\"),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": this._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n        }\n\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        }); \n    }\n\n    //Author: Dương Jerry\n    //Description: Return Story Object\n    public buildStory(story:any){\n        return new Story(this,story);\n    }\n\n    //Author: Dương Jerry\n    //Description: Return Story Object\n    public getStory(story_id:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}\",null,{story_id:story_id}),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            if(response != null){\n                callback(null,self.buildStory(response));\n            }else{\n                callback(\"Not found\",null);\n            }\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: New Story\n    public newStory(title:string = \"My Story\",callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories\"),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify({ title: title })\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Page.EventTypes.STORY_CHANGE,response);\n            callback(null,self.buildStory(response));\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Remove Story\n    public removeStory(story_id:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}\",null,{story_id:story_id}),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Page.EventTypes.SETTING_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Remove Story\n    public getStartedStory(callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/settings/getStartedStory\"),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            if(response != null){\n                response = self.buildStory(response);\n            }\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/page.ts","import { User } from './user';\nimport { Page } from './page';\n//LOAD DACEBOOK CONFIG\nimport {  FBConfig } from './configs/fb.config';\nFBConfig();\n\ndeclare var module:any;\n\nmodule.exports = {\n    User: User,\n    Page: Page\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/index.ts","//Import Config\nimport { DefaultConfig } from './configs/default.config';\nimport { URL } from './utils/helper';\nimport { Page} from './page';\n\ndeclare var $:any,FB:any;\n\nexport class Story {\n    _page: Page\n    _token:string;\n    _cards:[any];\n    _keys:[any];\n    _story:any;\n\n    public static EventTypes = {\n        CARDS_CHANGE: \"innoway_chatbot.story.card_change\",\n        KEYS_CHANGE: \"innoway_chatbot.story.key_change\",\n    }\n\n    constructor(page:Page,story:any){\n        this._page = page;\n        this._token = page._token;\n        this._story = story;\n    }\n\n    //Author: Dương Jerry\n    //Description: Get story cards\n    public getCards(callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/cards\",null,{story_id:self._story._id}),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false\n        }\n\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Add Card\n    public addCard(card:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/cards\",null,{\n                        story_id:self._story._id\n                    }),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify(card)\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.CARDS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Remove Card\n    public removeCard(card_id:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/cards/{{card_id}}\",null,{\n                        story_id:self._story._id, card_id: card_id\n                    }),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.CARDS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Update Card\n    public updateCard(card:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/cards/{{card_id}}\",null,{\n                        story_id:self._story._id, card_id: card._id\n                    }),\n            \"method\": \"PUT\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"data\": JSON.stringify(card)\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.CARDS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Get Story Keys\n    public getKeys(callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/keys\",null,{story_id:self._story._id}),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false\n        }\n\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Add Key\n    public addKey(key:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/keys\",null,{\n                        story_id:self._story._id\n                    }),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify({ key: key})\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.KEYS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Remove Key\n    public removeKey(key_id:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/keys/{{key_id}}\",null,{\n                        story_id:self._story._id, key_id: key_id\n                    }),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.KEYS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Update Key\n    public updateKey(key:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/keys/{{key_id}}\",null,{\n                        story_id:self._story._id, key_id: key._id\n                    }),\n            \"method\": \"PUT\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"data\": JSON.stringify(key)\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.KEYS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n    \n    //Author: Dương Jerry\n    //Description: Remove Story\n    public destroy(callback:any =()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}\",null,{story_id:self._story._id}),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            $(self._page).trigger(Page.EventTypes.STORY_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Update Story\n    public update(title:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}\",null,{story_id:self._story._id}),\n            \"method\": \"PUT\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"data\": JSON.stringify({ title: title})\n        }\n        $.ajax(settings).done((response:any) => {\n            $(self._page).trigger(Page.EventTypes.STORY_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Add Key\n    public setAsGetStarted(callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/setStarted\",null,{story_id:self._story._id}),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/story.ts","//Import Config\nimport { DefaultConfig } from './configs/default.config';\nimport { URL } from './utils/helper';\nimport {  FBConfig } from './configs/fb.config';\n\ndeclare var $:any,FB:any,gapi:any,window:any;\n\nexport class User {\n    //Khai báo biến private\n    _token:string;\n    //Khai báo biến public\n    public user:any;\n    public authenticated: boolean = false;\n    //Khai báo biến static\n    public static cards:any[] = [];\n    public static EventTypes = {\n        AUTHENTICATE_STATECHANGE: \"innoway_chatbot.user.authenticate\",\n        PAGE_STATECHANGE: \"innoway_chatbot.user.page_state\"\n    }\n\n    //Hàm khởi tạo với tham số token là Optional\n    constructor(token:string = null){\n        var self = this;\n        console.log(\"Init User Object\");\n        FBConfig(()=>{\n            console.log(\"FACEBOOK LOADED\");\n            FB.getLoginStatus((res:any) =>{\n                console.log(\"LOGIN STATUS \",res);\n                if(res.status === \"connected\"){\n                    self._token = res.authResponse.accessToken;\n                    self.authenticated = true;\n                    $(self).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE,self.authenticated);\n                }else{\n                    console.log(\"not connected\");\n                    // self.loginWithFacebook();\n                }\n            })\n        });\n    } \n\n    //Khai báo hàm private \n    //Tham số là 1 hàm callback Optional\n    private isAuthenticated(callback:any = ()=>{}){\n        if(!this.authenticated){\n            callback('PERMISSION ERROR',\"You don't have permission to access\");\n        }\n        return this.authenticated\n    }\n    //Khai báo hàm cho 1 đối tượng User\n    // public login(phone:string,password:string,callback:any = ()=>{}){\n    //     //Sử dụng ajax để access API\n    //     $.ajax({\n    //         type: 'POST',\n    //         url: API.pages.getAllPages,\n    //         dataType:'json',\n    //         data: { //Dữ liệu json gửi đi\n    //             Phone   : phone,\n    //             Password: password\n    //         }\n    //     })\n    //     .done((res:any) => {\n    //         //Kết quả trả về\n    //         if(res.StatusCode === 200){\n    //             this.user = res.Data;\n    //             this._token = res.Data.Token;\n    //             this.authenticated = true;\n    //             //Tạo event trigger\n    //             //Dùng để client biêt khi có event\n    //             //Ví dụ $(this).on(\"EVENT_KEY\",callback);\n    //             $(this).trigger(\"EVENT_KEY\",this.authenticated); \n    //             //Sử dụng localStorage cho 1 số biến cần cache lại\n    //             localStorage.setItem(\"STORE_KEY\",res.Data.Token);\n    //             //Gọi callback đẻ trả về kết quả cho client \n    //             callback(null,res.Data);\n    //         }else{\n    //             this.authenticated = false;\n    //             $(this).trigger(\"EVENT_KEY\",this.authenticated);\n    //             callback(res.StatusCode,res.StatusMessage);\n    //         }\n            \n    //     })\n    //     .fail((request:any,err:any,status:any)=>{\n    //         //Kết quả trả về lỗi \n    //         this.authenticated = false;\n    //         $(this).trigger(\"EVENT_KEY\",this.authenticated);\n    //         callback(err,status);\n    //     });\n    // }\n    //LOGIN WITH FACEBOOK\n    public loginWithFacebook(callback:any = ()=>{}){\n        var self = this;\n        FB.login(function(response:any) {\n            if (response.authResponse) {\n                self._token = response.authResponse.accessToken;\n                self.authenticated = true;\n                callback(null,response.authResponse);\n            } else {\n                self._token = null\n                self.authenticated = false;\n                callback('User cancelled login or did not fully authorize.',null);\n            }\n            $(self).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE,self.authenticated);\n        });\n    }\n\n    //LOGOUT\n    public logout(){\n        //Facebook logout \n        FB.logout();\n        //Xoá cache \n        // localStorage.removeItem(\"STORE_KEY\");\n        this._token = null;\n        this.user = null;\n        this.authenticated = false;\n        $(this).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE,this.authenticated);\n    }\n\n    //GET LIST FAN PAGE\n    public getPages(callback:any = ()=>{}){\n        var self = this;\n        if(!self.isAuthenticated(callback)) return;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/me/pages\"),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": this._token\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Subscribe page\n    public subscribePage(page_token:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/me/pages/subscribe\",{page_token: page_token}),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": this._token,\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(User.EventTypes.PAGE_STATECHANGE,true);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Unsubscribe page\n    public unSubscribePage(page_token:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/me/pages/subscribe\",{page_token: page_token}),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": this._token,\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(User.EventTypes.PAGE_STATECHANGE,false);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    public getInfo(callback:any = ()=>{},fields = \"email,id,birthday,name\",size = \"large\"){\n        var self = this;\n        if(!self.isAuthenticated(callback)) return;\n        FB.api('/me','GET',{ \"fields\": fields , \"type\": size},\n            (res:any) => {\n                callback(null,res);\n            }\n        )\n    }\n\n    //Author: Dương Jerry\n    //Description: Get page info\n    public getPageInfo(page_token:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/me/pages/info\",{page_token: page_token}),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Get page info with ID\n    public getPageInfoWithId(pid:string,callback:any= ()=>{},fields=\"access_token,picture,name,is_webhooks_subscribed\"){\n        var self = this;\n        FB.api(\n            '/'+pid,\n            'GET',\n            {\"fields\":fields},\n            function(response:any) {\n                callback(null,response);\n            }\n        );\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/user.ts"],"sourceRoot":""}