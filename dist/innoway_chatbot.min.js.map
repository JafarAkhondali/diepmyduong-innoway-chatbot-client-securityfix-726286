{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///innoway_chatbot.min.js","webpack:///webpack/bootstrap 3fbc6640b326bdad4105","webpack:///./src/utils/helper.ts","webpack:///./src/configs/default.config.ts","webpack:///./src/page.ts","webpack:///./src/configs/fb.config.ts","webpack:///./src/index.ts","webpack:///./src/story.ts","webpack:///./src/user.ts"],"names":["root","factory","exports","module","define","amd","innoway_chatbot","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","default_config_1","URL","apiUrl","path","query","params","url","DefaultConfig","host","Object","keys","map","key","replace","RegExp","slice","facebook","app_id","helper_1","story_1","Page","token","_token","prototype","getSettings","callback","self","settings","async","crossDomain","method","headers","access_token","$","ajax","done","response","fail","request","err","status","activeSetting","data","content-type","processData","JSON","stringify","trigger","EventTypes","SETTING_CHANGE","deActiveSetting","types","getStories","buildStory","story","Story","getStory","story_id","newStory","title","STORY_CHANGE","removeStory","SettingTypes","GREETING","PRESISTENT_MENU","GET_STARTED","FBConfig","d","document","s","window","fbAsyncInit","FB","init","appId","xfbml","version","AppEvents","logPageView","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","user_1","page_1","fb_config_1","User","page","_page","_story","getCards","_id","addCard","card","CARDS_CHANGE","removeCard","card_id","updateCard","getKeys","addKey","KEYS_CHANGE","removeKey","key_id","updateKey","destroy","update","setAsGetStarted","authenticated","getLoginStatus","res","console","log","authResponse","accessToken","AUTHENTICATE_STATECHANGE","isAuthenticated","loginWithFacebook","login","logout","user","getPages","subscribePage","page_token","PAGE_STATECHANGE","unSubscribePage","getInfo","fields","api","cards"],"mappings":"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","file":"innoway_chatbot.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"innoway_chatbot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"innoway_chatbot\"] = factory();\n\telse\n\t\troot[\"innoway_chatbot\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"innoway_chatbot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"innoway_chatbot\"] = factory();\n\telse\n\t\troot[\"innoway_chatbot\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(5);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar default_config_1 = __webpack_require__(2);\n\tvar URL = (function () {\n\t    function URL() {\n\t    }\n\t    //Author: Dương Jerry\n\t    //Description: get API full url\n\t    URL.apiUrl = function (path, query, params) {\n\t        if (query === void 0) { query = null; }\n\t        if (params === void 0) { params = null; }\n\t        var url = default_config_1.DefaultConfig.host;\n\t        if (params) {\n\t            Object.keys(params).map(function (key) {\n\t                path = path.replace(new RegExp(\"\\{\\{\" + key + \"\\}\\}\", 'g'), params[key]);\n\t            });\n\t        }\n\t        if (query) {\n\t            path += \"?\";\n\t            Object.keys(query).map(function (key) {\n\t                path += key + \"=\" + query[key] + \"&\";\n\t            });\n\t            path = path.slice(0, -1);\n\t        }\n\t        return url + path;\n\t    };\n\t    return URL;\n\t}());\n\texports.URL = URL;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\texports.DefaultConfig = {\n\t    host: \"https://jerry-chatbot.herokuapp.com/\",\n\t    facebook: {\n\t        app_id: \"143366482876596\" //Innoway\n\t    }\n\t};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar helper_1 = __webpack_require__(1);\n\tvar story_1 = __webpack_require__(6);\n\tvar Page = (function () {\n\t    function Page(token) {\n\t        this._token = token;\n\t    }\n\t    //Author: Dương Jerry\n\t    //Description: Get page settings\n\t    Page.prototype.getSettings = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/settings\"),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Active page settings\n\t    Page.prototype.activeSetting = function (data, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/settings/active\"),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify(data)\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Page.EventTypes.SETTING_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Deative page settings\n\t    Page.prototype.deActiveSetting = function (types, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/settings/deactive\"),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify({\n\t                types: types\n\t            })\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Page.EventTypes.SETTING_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Get all Stories\n\t    Page.prototype.getStories = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories\"),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": this._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Return Story Object\n\t    Page.prototype.buildStory = function (story) {\n\t        return new story_1.Story(this, story);\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Return Story Object\n\t    Page.prototype.getStory = function (story_id, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}\", null, { story_id: story_id }),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            if (response != null) {\n\t                callback(null, self.buildStory(response));\n\t            }\n\t            else {\n\t                callback(\"Not found\", null);\n\t            }\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: New Story\n\t    Page.prototype.newStory = function (title, callback) {\n\t        if (title === void 0) { title = \"My Story\"; }\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories\"),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify({ title: title })\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Page.EventTypes.STORY_CHANGE, response);\n\t            callback(null, self.buildStory(response));\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Remove Story\n\t    Page.prototype.removeStory = function (story_id, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}\", null, { story_id: story_id }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Page.EventTypes.SETTING_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    Page.SettingTypes = {\n\t        GREETING: \"greeting\",\n\t        PRESISTENT_MENU: \"persistent_menu\",\n\t        GET_STARTED: \"get_started\",\n\t    };\n\t    Page.EventTypes = {\n\t        SETTING_CHANGE: \"innoway_chatbot.page.setting_change\",\n\t        STORY_CHANGE: \"innoway_chatbot.page.story_change\",\n\t    };\n\t    return Page;\n\t}());\n\texports.Page = Page;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar default_config_1 = __webpack_require__(2);\n\t//Facebook Config\n\texports.FBConfig = function () {\n\t    var d = document;\n\t    var s = 'script';\n\t    var id = 'facebook-jssdk';\n\t    window.fbAsyncInit = function () {\n\t        FB.init({\n\t            appId: default_config_1.DefaultConfig.facebook.app_id,\n\t            xfbml: true,\n\t            version: 'v2.9'\n\t        });\n\t        FB.AppEvents.logPageView();\n\t    };\n\t    var js, fjs = d.getElementsByTagName(s)[0];\n\t    if (d.getElementById(id)) {\n\t        return;\n\t    }\n\t    js = d.createElement(s);\n\t    js.id = id;\n\t    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n\t    fjs.parentNode.insertBefore(js, fjs);\n\t};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar user_1 = __webpack_require__(7);\n\tvar page_1 = __webpack_require__(3);\n\t//LOAD DACEBOOK CONFIG\n\tvar fb_config_1 = __webpack_require__(4);\n\tfb_config_1.FBConfig();\n\tmodule.exports = {\n\t    User: user_1.User,\n\t    Page: page_1.Page\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar helper_1 = __webpack_require__(1);\n\tvar page_1 = __webpack_require__(3);\n\tvar Story = (function () {\n\t    function Story(page, story) {\n\t        this._page = page;\n\t        this._token = page._token;\n\t        this._story = story;\n\t    }\n\t    //Author: Dương Jerry\n\t    //Description: Get story cards\n\t    Story.prototype.getCards = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/cards\", null, { story_id: self._story._id }),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Add Card\n\t    Story.prototype.addCard = function (card, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/cards\", null, {\n\t                story_id: self._story._id\n\t            }),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify(card)\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.CARDS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Remove Card\n\t    Story.prototype.removeCard = function (card_id, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/cards/{{card_id}}\", null, {\n\t                story_id: self._story._id, card_id: card_id\n\t            }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.CARDS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Update Card\n\t    Story.prototype.updateCard = function (card, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/cards/{{card_id}}\", null, {\n\t                story_id: self._story._id, card_id: card._id\n\t            }),\n\t            \"method\": \"PUT\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"data\": JSON.stringify(card)\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.CARDS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Get Story Keys\n\t    Story.prototype.getKeys = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/keys\", null, { story_id: self._story._id }),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Add Key\n\t    Story.prototype.addKey = function (key, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/keys\", null, {\n\t                story_id: self._story._id\n\t            }),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"processData\": false,\n\t            \"data\": JSON.stringify({ key: key })\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.KEYS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Remove Key\n\t    Story.prototype.removeKey = function (key_id, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/keys/{{key_id}}\", null, {\n\t                story_id: self._story._id, key_id: key_id\n\t            }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.KEYS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Update Key\n\t    Story.prototype.updateKey = function (key, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/keys/{{key_id}}\", null, {\n\t                story_id: self._story._id, key_id: key._id\n\t            }),\n\t            \"method\": \"PUT\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"data\": JSON.stringify(key)\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(Story.EventTypes.KEYS_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Remove Story\n\t    Story.prototype.destroy = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}\", null, { story_id: self._story._id }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self._page).trigger(page_1.Page.EventTypes.STORY_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Update Story\n\t    Story.prototype.update = function (title, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}\", null, { story_id: self._story._id }),\n\t            \"method\": \"PUT\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            },\n\t            \"data\": JSON.stringify({ title: title })\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self._page).trigger(page_1.Page.EventTypes.STORY_CHANGE, response);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Author: Dương Jerry\n\t    //Description: Add Key\n\t    Story.prototype.setAsGetStarted = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/page/stories/{{story_id}}/setStarted\", null, { story_id: self._story._id }),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": self._token,\n\t                \"content-type\": \"application/json\",\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    Story.EventTypes = {\n\t        CARDS_CHANGE: \"innoway_chatbot.story.card_change\",\n\t        KEYS_CHANGE: \"innoway_chatbot.story.key_change\",\n\t    };\n\t    return Story;\n\t}());\n\texports.Story = Story;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar helper_1 = __webpack_require__(1);\n\tvar User = (function () {\n\t    //Hàm khởi tạo với tham số token là Optional\n\t    function User(token) {\n\t        if (token === void 0) { token = null; }\n\t        this.authenticated = false;\n\t        var self = this;\n\t        FB.getLoginStatus(function (res) {\n\t            console.log(\"LOGIN STATUS \", res);\n\t            if (res.status === \"connected\") {\n\t                self._token = res.authResponse.accessToken;\n\t                self.authenticated = true;\n\t                $(self).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE, self.authenticated);\n\t            }\n\t            else {\n\t            }\n\t        });\n\t    }\n\t    //Khai báo hàm private \n\t    //Tham số là 1 hàm callback Optional\n\t    User.prototype.isAuthenticated = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        if (!this.authenticated) {\n\t            callback('PERMISSION ERROR', \"You don't have permission to access\");\n\t        }\n\t        return this.authenticated;\n\t    };\n\t    //Khai báo hàm cho 1 đối tượng User\n\t    // public login(phone:string,password:string,callback:any = ()=>{}){\n\t    //     //Sử dụng ajax để access API\n\t    //     $.ajax({\n\t    //         type: 'POST',\n\t    //         url: API.pages.getAllPages,\n\t    //         dataType:'json',\n\t    //         data: { //Dữ liệu json gửi đi\n\t    //             Phone   : phone,\n\t    //             Password: password\n\t    //         }\n\t    //     })\n\t    //     .done((res:any) => {\n\t    //         //Kết quả trả về\n\t    //         if(res.StatusCode === 200){\n\t    //             this.user = res.Data;\n\t    //             this._token = res.Data.Token;\n\t    //             this.authenticated = true;\n\t    //             //Tạo event trigger\n\t    //             //Dùng để client biêt khi có event\n\t    //             //Ví dụ $(this).on(\"EVENT_KEY\",callback);\n\t    //             $(this).trigger(\"EVENT_KEY\",this.authenticated); \n\t    //             //Sử dụng localStorage cho 1 số biến cần cache lại\n\t    //             localStorage.setItem(\"STORE_KEY\",res.Data.Token);\n\t    //             //Gọi callback đẻ trả về kết quả cho client \n\t    //             callback(null,res.Data);\n\t    //         }else{\n\t    //             this.authenticated = false;\n\t    //             $(this).trigger(\"EVENT_KEY\",this.authenticated);\n\t    //             callback(res.StatusCode,res.StatusMessage);\n\t    //         }\n\t    //     })\n\t    //     .fail((request:any,err:any,status:any)=>{\n\t    //         //Kết quả trả về lỗi \n\t    //         this.authenticated = false;\n\t    //         $(this).trigger(\"EVENT_KEY\",this.authenticated);\n\t    //         callback(err,status);\n\t    //     });\n\t    // }\n\t    //LOGIN WITH FACEBOOK\n\t    User.prototype.loginWithFacebook = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        FB.login(function (response) {\n\t            if (response.authResponse) {\n\t                self._token = response.authResponse.accessToken;\n\t                self.authenticated = true;\n\t                callback(null, response.authResponse);\n\t            }\n\t            else {\n\t                self._token = null;\n\t                self.authenticated = false;\n\t                callback('User cancelled login or did not fully authorize.', null);\n\t            }\n\t            $(self).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE, self.authenticated);\n\t        });\n\t    };\n\t    //LOGOUT\n\t    User.prototype.logout = function () {\n\t        //Facebook logout \n\t        FB.logout();\n\t        //Xoá cache \n\t        // localStorage.removeItem(\"STORE_KEY\");\n\t        this._token = null;\n\t        this.user = null;\n\t        this.authenticated = false;\n\t    };\n\t    //GET LIST FAN PAGE\n\t    User.prototype.getPages = function (callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        if (!self.isAuthenticated(callback))\n\t            return;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/me/pages\"),\n\t            \"method\": \"GET\",\n\t            \"headers\": {\n\t                \"access_token\": this._token\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Subscribe page\n\t    User.prototype.subscribePage = function (page_token, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/me/pages/subscribe\", { page_token: page_token }),\n\t            \"method\": \"POST\",\n\t            \"headers\": {\n\t                \"access_token\": this._token,\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(User.EventTypes.PAGE_STATECHANGE, true);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    //Unsubscribe page\n\t    User.prototype.unSubscribePage = function (page_token, callback) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        var self = this;\n\t        var settings = {\n\t            \"async\": true,\n\t            \"crossDomain\": true,\n\t            \"url\": helper_1.URL.apiUrl(\"api/me/pages/subscribe\", { page_token: page_token }),\n\t            \"method\": \"DELETE\",\n\t            \"headers\": {\n\t                \"access_token\": this._token,\n\t            }\n\t        };\n\t        $.ajax(settings).done(function (response) {\n\t            $(self).trigger(User.EventTypes.PAGE_STATECHANGE, false);\n\t            callback(null, response);\n\t        }).fail(function (request, err, status) {\n\t            callback(err, status);\n\t        });\n\t    };\n\t    User.prototype.getInfo = function (callback, fields) {\n\t        if (callback === void 0) { callback = function () { }; }\n\t        if (fields === void 0) { fields = \"email,id,birthday,name\"; }\n\t        var self = this;\n\t        if (!self.isAuthenticated(callback))\n\t            return;\n\t        FB.api('/me', 'GET', { \"fields\": fields }, function (res) {\n\t            callback(null, res);\n\t        });\n\t    };\n\t    //Khai báo biến static\n\t    User.cards = [];\n\t    User.EventTypes = {\n\t        AUTHENTICATE_STATECHANGE: \"innoway_chatbot.user.authenticate\",\n\t        PAGE_STATECHANGE: \"innoway_chatbot.user.page_state\"\n\t    };\n\t    return User;\n\t}());\n\texports.User = User;\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// innoway_chatbot.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3fbc6640b326bdad4105","import { DefaultConfig } from '../configs/default.config';\n\nexport class URL {\n\n    //Author: Dương Jerry\n    //Description: get API full url\n    public static apiUrl(path:string,query:any = null,params:any = null){\n        var url = DefaultConfig.host;\n        if(params){\n            Object.keys(params).map(key =>{\n                path = path.replace(new RegExp(\"\\{\\{\"+ key +\"\\}\\}\", 'g'),params[key]);\n            })\n        }\n        if(query){\n            path += \"?\";\n            Object.keys(query).map(key =>{\n                path += key+\"=\"+query[key]+\"&\";\n            })\n            path = path.slice(0, -1);\n        }\n        return url+path;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/utils/helper.ts","export const DefaultConfig = {\n    host: \"https://jerry-chatbot.herokuapp.com/\",\n    facebook: {\n        app_id: \"143366482876596\" //Innoway\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/configs/default.config.ts","//Import Config\nimport { DefaultConfig } from './configs/default.config';\nimport { URL } from './utils/helper';\nimport { Story } from './story';\n\ndeclare var $:any,FB:any;\n\nexport class Page {\n\n    _token:string; //page token\n    \n    public static SettingTypes = {\n        GREETING: \"greeting\",\n        PRESISTENT_MENU: \"persistent_menu\",\n        GET_STARTED: \"get_started\",\n    }\n\n    public static EventTypes = {\n        SETTING_CHANGE: \"innoway_chatbot.page.setting_change\",\n        STORY_CHANGE: \"innoway_chatbot.page.story_change\",\n    }\n\n    constructor(token:string){\n        this._token = token;\n    }\n\n    //Author: Dương Jerry\n    //Description: Get page settings\n    public getSettings(callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/settings\"),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Active page settings\n    public activeSetting(data:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/settings/active\"),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify(data)\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Page.EventTypes.SETTING_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Deative page settings\n    public deActiveSetting(types:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/settings/deactive\"),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify({\n                types: types\n            })\n        }\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Page.EventTypes.SETTING_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        }); \n    }\n\n    //Author: Dương Jerry\n    //Description: Get all Stories\n    public getStories(callback:any = ()=>{}){\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories\"),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": this._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n        }\n\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        }); \n    }\n\n    //Author: Dương Jerry\n    //Description: Return Story Object\n    public buildStory(story:any){\n        return new Story(this,story);\n    }\n\n    //Author: Dương Jerry\n    //Description: Return Story Object\n    public getStory(story_id:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}\",null,{story_id:story_id}),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            if(response != null){\n                callback(null,self.buildStory(response));\n            }else{\n                callback(\"Not found\",null);\n            }\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: New Story\n    public newStory(title:string = \"My Story\",callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories\"),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify({ title: title })\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Page.EventTypes.STORY_CHANGE,response);\n            callback(null,self.buildStory(response));\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Remove Story\n    public removeStory(story_id:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}\",null,{story_id:story_id}),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Page.EventTypes.SETTING_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/page.ts","import { DefaultConfig } from './default.config';\ndeclare var $:any,window:any,FB:any;\n\n//Facebook Config\n\n\nexport const FBConfig= () => {\n    var d = document;\n    var s = 'script';\n    var id = 'facebook-jssdk';\n    window.fbAsyncInit = function() {\n        FB.init({\n            appId      : DefaultConfig.facebook.app_id,\n            xfbml      : true,\n            version    : 'v2.9'\n        });\n        FB.AppEvents.logPageView();\n    };\n    var js:any, fjs:any = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) {return;}\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n};\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/configs/fb.config.ts","import { User } from './user';\nimport { Page } from './page';\n//LOAD DACEBOOK CONFIG\nimport {  FBConfig } from './configs/fb.config';\nFBConfig();\n\ndeclare var module:any;\n\nmodule.exports = {\n    User: User,\n    Page: Page\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/index.ts","//Import Config\nimport { DefaultConfig } from './configs/default.config';\nimport { URL } from './utils/helper';\nimport { Page} from './page';\n\ndeclare var $:any,FB:any;\n\nexport class Story {\n    _page: Page\n    _token:string;\n    _cards:[any];\n    _keys:[any];\n    _story:any;\n\n    public static EventTypes = {\n        CARDS_CHANGE: \"innoway_chatbot.story.card_change\",\n        KEYS_CHANGE: \"innoway_chatbot.story.key_change\",\n    }\n\n    constructor(page:Page,story:any){\n        this._page = page;\n        this._token = page._token;\n        this._story = story;\n    }\n\n    //Author: Dương Jerry\n    //Description: Get story cards\n    public getCards(callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/cards\",null,{story_id:self._story._id}),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false\n        }\n\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Add Card\n    public addCard(card:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/cards\",null,{\n                        story_id:self._story._id\n                    }),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify(card)\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.CARDS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Remove Card\n    public removeCard(card_id:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/cards/{{card_id}}\",null,{\n                        story_id:self._story._id, card_id: card_id\n                    }),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.CARDS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Update Card\n    public updateCard(card:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/cards/{{card_id}}\",null,{\n                        story_id:self._story._id, card_id: card._id\n                    }),\n            \"method\": \"PUT\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"data\": JSON.stringify(card)\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.CARDS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Get Story Keys\n    public getKeys(callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/keys\",null,{story_id:self._story._id}),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false\n        }\n\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Add Key\n    public addKey(key:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/keys\",null,{\n                        story_id:self._story._id\n                    }),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"processData\": false,\n            \"data\": JSON.stringify({ key: key})\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.KEYS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Remove Key\n    public removeKey(key_id:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/keys/{{key_id}}\",null,{\n                        story_id:self._story._id, key_id: key_id\n                    }),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.KEYS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Update Key\n    public updateKey(key:any,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/keys/{{key_id}}\",null,{\n                        story_id:self._story._id, key_id: key._id\n                    }),\n            \"method\": \"PUT\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"data\": JSON.stringify(key)\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(Story.EventTypes.KEYS_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n    \n    //Author: Dương Jerry\n    //Description: Remove Story\n    public destroy(callback:any =()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}\",null,{story_id:self._story._id}),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            $(self._page).trigger(Page.EventTypes.STORY_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Update Story\n    public update(title:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}\",null,{story_id:self._story._id}),\n            \"method\": \"PUT\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            },\n            \"data\": JSON.stringify({ title: title})\n        }\n        $.ajax(settings).done((response:any) => {\n            $(self._page).trigger(Page.EventTypes.STORY_CHANGE,response);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Author: Dương Jerry\n    //Description: Add Key\n    public setAsGetStarted(callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/page/stories/{{story_id}}/setStarted\",null,{story_id:self._story._id}),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": self._token,\n                \"content-type\": \"application/json\",\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/story.ts","//Import Config\nimport { DefaultConfig } from './configs/default.config';\nimport { URL } from './utils/helper';\n\ndeclare var $:any,FB:any,gapi:any,window:any;\n\nexport class User {\n    //Khai báo biến private\n    _token:string;\n    //Khai báo biến public\n    public user:any;\n    public authenticated: boolean = false;\n    //Khai báo biến static\n    public static cards:any[] = [];\n    public static EventTypes = {\n        AUTHENTICATE_STATECHANGE: \"innoway_chatbot.user.authenticate\",\n        PAGE_STATECHANGE: \"innoway_chatbot.user.page_state\"\n    }\n\n    //Hàm khởi tạo với tham số token là Optional\n    constructor(token:string = null){\n        var self = this;\n        FB.getLoginStatus((res:any) =>{\n            console.log(\"LOGIN STATUS \",res);\n            if(res.status === \"connected\"){\n                self._token = res.authResponse.accessToken;\n                self.authenticated = true;\n                $(self).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE,self.authenticated);\n            }else{\n                // self.loginWithFacebook();\n            }\n        })\n    } \n\n    //Khai báo hàm private \n    //Tham số là 1 hàm callback Optional\n    private isAuthenticated(callback:any = ()=>{}){\n        if(!this.authenticated){\n            callback('PERMISSION ERROR',\"You don't have permission to access\");\n        }\n        return this.authenticated\n    }\n    //Khai báo hàm cho 1 đối tượng User\n    // public login(phone:string,password:string,callback:any = ()=>{}){\n    //     //Sử dụng ajax để access API\n    //     $.ajax({\n    //         type: 'POST',\n    //         url: API.pages.getAllPages,\n    //         dataType:'json',\n    //         data: { //Dữ liệu json gửi đi\n    //             Phone   : phone,\n    //             Password: password\n    //         }\n    //     })\n    //     .done((res:any) => {\n    //         //Kết quả trả về\n    //         if(res.StatusCode === 200){\n    //             this.user = res.Data;\n    //             this._token = res.Data.Token;\n    //             this.authenticated = true;\n    //             //Tạo event trigger\n    //             //Dùng để client biêt khi có event\n    //             //Ví dụ $(this).on(\"EVENT_KEY\",callback);\n    //             $(this).trigger(\"EVENT_KEY\",this.authenticated); \n    //             //Sử dụng localStorage cho 1 số biến cần cache lại\n    //             localStorage.setItem(\"STORE_KEY\",res.Data.Token);\n    //             //Gọi callback đẻ trả về kết quả cho client \n    //             callback(null,res.Data);\n    //         }else{\n    //             this.authenticated = false;\n    //             $(this).trigger(\"EVENT_KEY\",this.authenticated);\n    //             callback(res.StatusCode,res.StatusMessage);\n    //         }\n            \n    //     })\n    //     .fail((request:any,err:any,status:any)=>{\n    //         //Kết quả trả về lỗi \n    //         this.authenticated = false;\n    //         $(this).trigger(\"EVENT_KEY\",this.authenticated);\n    //         callback(err,status);\n    //     });\n    // }\n    //LOGIN WITH FACEBOOK\n    public loginWithFacebook(callback:any = ()=>{}){\n        var self = this;\n        FB.login(function(response:any) {\n            if (response.authResponse) {\n                self._token = response.authResponse.accessToken;\n                self.authenticated = true;\n                callback(null,response.authResponse);\n            } else {\n                self._token = null\n                self.authenticated = false;\n                callback('User cancelled login or did not fully authorize.',null);\n            }\n            $(self).trigger(User.EventTypes.AUTHENTICATE_STATECHANGE,self.authenticated);\n        });\n    }\n\n    //LOGOUT\n    public logout(){\n        //Facebook logout \n        FB.logout();\n        //Xoá cache \n        // localStorage.removeItem(\"STORE_KEY\");\n        this._token = null;\n        this.user = null;\n        this.authenticated = false;\n    }\n\n    //GET LIST FAN PAGE\n    public getPages(callback:any = ()=>{}){\n        var self = this;\n        if(!self.isAuthenticated(callback)) return;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/me/pages\"),\n            \"method\": \"GET\",\n            \"headers\": {\n                \"access_token\": this._token\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Subscribe page\n    public subscribePage(page_token:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/me/pages/subscribe\",{page_token: page_token}),\n            \"method\": \"POST\",\n            \"headers\": {\n                \"access_token\": this._token,\n            }\n        }\n\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(User.EventTypes.PAGE_STATECHANGE,true);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    //Unsubscribe page\n    public unSubscribePage(page_token:string,callback:any = ()=>{}){\n        var self = this;\n        var settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": URL.apiUrl(\"api/me/pages/subscribe\",{page_token: page_token}),\n            \"method\": \"DELETE\",\n            \"headers\": {\n                \"access_token\": this._token,\n            }\n        }\n        $.ajax(settings).done((response:any) => {\n            $(self).trigger(User.EventTypes.PAGE_STATECHANGE,false);\n            callback(null,response);\n        }).fail((request:any,err:any,status:any) => {\n            callback(err,status);\n        });\n    }\n\n    public getInfo(callback:any = ()=>{},fields = \"email,id,birthday,name\"){\n        var self = this;\n        if(!self.isAuthenticated(callback)) return;\n        FB.api('/me','GET',{ \"fields\": fields },\n            (res:any) => {\n                callback(null,res);\n            }\n        )\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/user.ts"],"sourceRoot":""}